{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9818400,"sourceType":"datasetVersion","datasetId":6019865}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 필요한 라이브러리 임포트\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\n# 1. 데이터 불러오기\n# 예: 집값 데이터셋 파일을 CSV로 불러오기\n# data = pd.read_csv('house_prices.csv')\n\n# 예제 데이터 생성\ndata = pd.DataFrame({\n    'size': [750, 800, 850, 900, 950, 1000, 1100, 1200, 1300, 1400],\n    'bedrooms': [2, 2, 3, 3, 3, 3, 4, 4, 4, 5],\n    'age': [10, 15, 10, 20, 25, 30, 5, 10, 20, 30],\n    'price': [150000, 160000, 170000, 180000, 190000, 200000, 220000, 240000, 260000, 280000]\n})\n\n# 2. 특성과 타깃 변수 분리\nX = data[['size', 'bedrooms', 'age']]\ny = data['price']\n\n# 3. 학습/테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 4. 모델 선택 및 학습 (선형 회귀)\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# 5. 예측\ny_pred = model.predict(X_test)\n\n# 6. 모델 성능 평가\nmse = mean_squared_error(y_test, y_pred)\nrmse = np.sqrt(mse)\n\nprint(\"예측된 집값:\", y_pred)\nprint(\"RMSE (Root Mean Squared Error):\", rmse)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T00:16:06.896913Z","iopub.execute_input":"2024-11-07T00:16:06.897392Z","iopub.status.idle":"2024-11-07T00:16:10.077508Z","shell.execute_reply.started":"2024-11-07T00:16:06.897345Z","shell.execute_reply":"2024-11-07T00:16:10.076027Z"}},"outputs":[{"name":"stdout","text":"예측된 집값: [260000. 160000.]\nRMSE (Root Mean Squared Error): 2.9103830456733704e-11\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import pandas as pd\ndata = pd.read_csv('/kaggle/input/seoul-department-data/.csv', encoding='cp949', low_memory=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:18:24.503675Z","iopub.execute_input":"2024-11-07T02:18:24.504176Z","iopub.status.idle":"2024-11-07T02:18:35.388356Z","shell.execute_reply.started":"2024-11-07T02:18:24.504129Z","shell.execute_reply":"2024-11-07T02:18:35.387289Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:18:47.646418Z","iopub.execute_input":"2024-11-07T02:18:47.646880Z","iopub.status.idle":"2024-11-07T02:18:48.514773Z","shell.execute_reply.started":"2024-11-07T02:18:47.646839Z","shell.execute_reply":"2024-11-07T02:18:48.513451Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"         접수연도  자치구코드  자치구명  법정동코드   법정동명  지번구분 지번구분명    본번    부번  \\\n0        2023  11380   은평구  10200    녹번동   1.0    대지  0152  0059   \n1        2023  11590   동작구  10700    사당동   NaN   NaN   NaN   NaN   \n2        2023  11590   동작구  10700    사당동   NaN   NaN   NaN   NaN   \n3        2023  11710   송파구  10400    송파동   1.0    대지  0095  0007   \n4        2023  11530   구로구  10200    구로동   1.0    대지  0546  0017   \n...       ...    ...   ...    ...    ...   ...   ...   ...   ...   \n1026027  2018  11200   성동구  10700    행당동   1.0    대지  0375  0000   \n1026028  2018  11200   성동구  10700    행당동   1.0    대지  0375  0000   \n1026029  2018  11200   성동구  10200  하왕십리동   1.0    대지  0258  0000   \n1026030  2018  11380   은평구  10800    역촌동   1.0    대지  0003  0029   \n1026031  2018  11560  영등포구  11000   여의도동   1.0    대지  0054  0000   \n\n                    건물명  ...  물건금액(만원)  건물면적(㎡)  토지면적(㎡)     층  권리구분 취소일  \\\n0        이지플아트빌(152-59)  ...     33500    43.04    37.00   2.0   NaN NaN   \n1                   NaN  ...     90000   146.14    98.60   NaN   NaN NaN   \n2                   NaN  ...    190000   148.23   202.70   NaN   NaN NaN   \n3          HANYANGLEEPS  ...     11000    13.38    10.61   5.0   NaN NaN   \n4             오크트리빌구로1차  ...     27250    29.18    20.13   5.0   NaN NaN   \n...                 ...  ...       ...      ...      ...   ...   ...  ..   \n1026027            두산위브  ...     46500    59.99     0.00   4.0   NaN NaN   \n1026028            두산위브  ...     46500    59.99     0.00   3.0   NaN NaN   \n1026029            청계벽산  ...     48000   114.46      NaN  18.0   NaN NaN   \n1026030           청록아트빌  ...     18000    54.47    25.27   1.0   NaN NaN   \n1026031              진주  ...     71000    94.31     0.00   7.0   NaN NaN   \n\n           건축년도   건물용도  신고구분 신고한 개업공인중개사 시군구명  \n0        2005.0  연립다세대  중개거래           서울 은평구  \n1        1987.0  단독다가구  중개거래           서울 강남구  \n2        1970.0  단독다가구  중개거래           서울 강남구  \n3        2012.0  연립다세대  중개거래           서울 송파구  \n4        2023.0  연립다세대   직거래              NaN  \n...         ...    ...   ...              ...  \n1026027  2009.0    아파트   NaN              NaN  \n1026028  2009.0    아파트   NaN              NaN  \n1026029  1996.0    아파트   NaN              NaN  \n1026030  2001.0  연립다세대   NaN              NaN  \n1026031  1977.0    아파트   NaN              NaN  \n\n[1026032 rows x 21 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>접수연도</th>\n      <th>자치구코드</th>\n      <th>자치구명</th>\n      <th>법정동코드</th>\n      <th>법정동명</th>\n      <th>지번구분</th>\n      <th>지번구분명</th>\n      <th>본번</th>\n      <th>부번</th>\n      <th>건물명</th>\n      <th>...</th>\n      <th>물건금액(만원)</th>\n      <th>건물면적(㎡)</th>\n      <th>토지면적(㎡)</th>\n      <th>층</th>\n      <th>권리구분</th>\n      <th>취소일</th>\n      <th>건축년도</th>\n      <th>건물용도</th>\n      <th>신고구분</th>\n      <th>신고한 개업공인중개사 시군구명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2023</td>\n      <td>11380</td>\n      <td>은평구</td>\n      <td>10200</td>\n      <td>녹번동</td>\n      <td>1.0</td>\n      <td>대지</td>\n      <td>0152</td>\n      <td>0059</td>\n      <td>이지플아트빌(152-59)</td>\n      <td>...</td>\n      <td>33500</td>\n      <td>43.04</td>\n      <td>37.00</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2005.0</td>\n      <td>연립다세대</td>\n      <td>중개거래</td>\n      <td>서울 은평구</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2023</td>\n      <td>11590</td>\n      <td>동작구</td>\n      <td>10700</td>\n      <td>사당동</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>90000</td>\n      <td>146.14</td>\n      <td>98.60</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1987.0</td>\n      <td>단독다가구</td>\n      <td>중개거래</td>\n      <td>서울 강남구</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2023</td>\n      <td>11590</td>\n      <td>동작구</td>\n      <td>10700</td>\n      <td>사당동</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>190000</td>\n      <td>148.23</td>\n      <td>202.70</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1970.0</td>\n      <td>단독다가구</td>\n      <td>중개거래</td>\n      <td>서울 강남구</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2023</td>\n      <td>11710</td>\n      <td>송파구</td>\n      <td>10400</td>\n      <td>송파동</td>\n      <td>1.0</td>\n      <td>대지</td>\n      <td>0095</td>\n      <td>0007</td>\n      <td>HANYANGLEEPS</td>\n      <td>...</td>\n      <td>11000</td>\n      <td>13.38</td>\n      <td>10.61</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2012.0</td>\n      <td>연립다세대</td>\n      <td>중개거래</td>\n      <td>서울 송파구</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2023</td>\n      <td>11530</td>\n      <td>구로구</td>\n      <td>10200</td>\n      <td>구로동</td>\n      <td>1.0</td>\n      <td>대지</td>\n      <td>0546</td>\n      <td>0017</td>\n      <td>오크트리빌구로1차</td>\n      <td>...</td>\n      <td>27250</td>\n      <td>29.18</td>\n      <td>20.13</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2023.0</td>\n      <td>연립다세대</td>\n      <td>직거래</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1026027</th>\n      <td>2018</td>\n      <td>11200</td>\n      <td>성동구</td>\n      <td>10700</td>\n      <td>행당동</td>\n      <td>1.0</td>\n      <td>대지</td>\n      <td>0375</td>\n      <td>0000</td>\n      <td>두산위브</td>\n      <td>...</td>\n      <td>46500</td>\n      <td>59.99</td>\n      <td>0.00</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2009.0</td>\n      <td>아파트</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1026028</th>\n      <td>2018</td>\n      <td>11200</td>\n      <td>성동구</td>\n      <td>10700</td>\n      <td>행당동</td>\n      <td>1.0</td>\n      <td>대지</td>\n      <td>0375</td>\n      <td>0000</td>\n      <td>두산위브</td>\n      <td>...</td>\n      <td>46500</td>\n      <td>59.99</td>\n      <td>0.00</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2009.0</td>\n      <td>아파트</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1026029</th>\n      <td>2018</td>\n      <td>11200</td>\n      <td>성동구</td>\n      <td>10200</td>\n      <td>하왕십리동</td>\n      <td>1.0</td>\n      <td>대지</td>\n      <td>0258</td>\n      <td>0000</td>\n      <td>청계벽산</td>\n      <td>...</td>\n      <td>48000</td>\n      <td>114.46</td>\n      <td>NaN</td>\n      <td>18.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1996.0</td>\n      <td>아파트</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1026030</th>\n      <td>2018</td>\n      <td>11380</td>\n      <td>은평구</td>\n      <td>10800</td>\n      <td>역촌동</td>\n      <td>1.0</td>\n      <td>대지</td>\n      <td>0003</td>\n      <td>0029</td>\n      <td>청록아트빌</td>\n      <td>...</td>\n      <td>18000</td>\n      <td>54.47</td>\n      <td>25.27</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2001.0</td>\n      <td>연립다세대</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1026031</th>\n      <td>2018</td>\n      <td>11560</td>\n      <td>영등포구</td>\n      <td>11000</td>\n      <td>여의도동</td>\n      <td>1.0</td>\n      <td>대지</td>\n      <td>0054</td>\n      <td>0000</td>\n      <td>진주</td>\n      <td>...</td>\n      <td>71000</td>\n      <td>94.31</td>\n      <td>0.00</td>\n      <td>7.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1977.0</td>\n      <td>아파트</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>1026032 rows × 21 columns</p>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"data.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:18:49.431052Z","iopub.execute_input":"2024-11-07T02:18:49.431510Z","iopub.status.idle":"2024-11-07T02:18:49.439606Z","shell.execute_reply.started":"2024-11-07T02:18:49.431467Z","shell.execute_reply":"2024-11-07T02:18:49.438462Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"Index(['접수연도', '자치구코드', '자치구명', '법정동코드', '법정동명', '지번구분', '지번구분명', '본번', '부번',\n       '건물명', '계약일', '물건금액(만원)', '건물면적(㎡)', '토지면적(㎡)', '층', '권리구분', '취소일',\n       '건축년도', '건물용도', '신고구분', '신고한 개업공인중개사 시군구명'],\n      dtype='object')"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"cols = ['건물면적(㎡)', '토지면적(㎡)', '건축년도','층','접수연도']\nX = data[cols]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:18:50.130954Z","iopub.execute_input":"2024-11-07T02:18:50.132035Z","iopub.status.idle":"2024-11-07T02:18:50.162402Z","shell.execute_reply.started":"2024-11-07T02:18:50.131986Z","shell.execute_reply":"2024-11-07T02:18:50.161011Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"X = data[['건물면적(㎡)','토지면적(㎡)','건축년도','층','접수연도']]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:18:51.206224Z","iopub.execute_input":"2024-11-07T02:18:51.206700Z","iopub.status.idle":"2024-11-07T02:18:51.241584Z","shell.execute_reply.started":"2024-11-07T02:18:51.206654Z","shell.execute_reply":"2024-11-07T02:18:51.240484Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"X","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:18:52.066300Z","iopub.execute_input":"2024-11-07T02:18:52.066785Z","iopub.status.idle":"2024-11-07T02:18:52.087144Z","shell.execute_reply.started":"2024-11-07T02:18:52.066741Z","shell.execute_reply":"2024-11-07T02:18:52.085975Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"         건물면적(㎡)  토지면적(㎡)    건축년도     층  접수연도\n0          43.04    37.00  2005.0   2.0  2023\n1         146.14    98.60  1987.0   NaN  2023\n2         148.23   202.70  1970.0   NaN  2023\n3          13.38    10.61  2012.0   5.0  2023\n4          29.18    20.13  2023.0   5.0  2023\n...          ...      ...     ...   ...   ...\n1026027    59.99     0.00  2009.0   4.0  2018\n1026028    59.99     0.00  2009.0   3.0  2018\n1026029   114.46      NaN  1996.0  18.0  2018\n1026030    54.47    25.27  2001.0   1.0  2018\n1026031    94.31     0.00  1977.0   7.0  2018\n\n[1026032 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>건물면적(㎡)</th>\n      <th>토지면적(㎡)</th>\n      <th>건축년도</th>\n      <th>층</th>\n      <th>접수연도</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>43.04</td>\n      <td>37.00</td>\n      <td>2005.0</td>\n      <td>2.0</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>146.14</td>\n      <td>98.60</td>\n      <td>1987.0</td>\n      <td>NaN</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>148.23</td>\n      <td>202.70</td>\n      <td>1970.0</td>\n      <td>NaN</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13.38</td>\n      <td>10.61</td>\n      <td>2012.0</td>\n      <td>5.0</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>29.18</td>\n      <td>20.13</td>\n      <td>2023.0</td>\n      <td>5.0</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1026027</th>\n      <td>59.99</td>\n      <td>0.00</td>\n      <td>2009.0</td>\n      <td>4.0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1026028</th>\n      <td>59.99</td>\n      <td>0.00</td>\n      <td>2009.0</td>\n      <td>3.0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1026029</th>\n      <td>114.46</td>\n      <td>NaN</td>\n      <td>1996.0</td>\n      <td>18.0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1026030</th>\n      <td>54.47</td>\n      <td>25.27</td>\n      <td>2001.0</td>\n      <td>1.0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1026031</th>\n      <td>94.31</td>\n      <td>0.00</td>\n      <td>1977.0</td>\n      <td>7.0</td>\n      <td>2018</td>\n    </tr>\n  </tbody>\n</table>\n<p>1026032 rows × 5 columns</p>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"X.dropna()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:18:53.134500Z","iopub.execute_input":"2024-11-07T02:18:53.134927Z","iopub.status.idle":"2024-11-07T02:18:53.302358Z","shell.execute_reply.started":"2024-11-07T02:18:53.134881Z","shell.execute_reply":"2024-11-07T02:18:53.301143Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"         건물면적(㎡)  토지면적(㎡)    건축년도     층  접수연도\n0          43.04    37.00  2005.0   2.0  2023\n3          13.38    10.61  2012.0   5.0  2023\n4          29.18    20.13  2023.0   5.0  2023\n5          29.29    20.20  2023.0   2.0  2023\n6          26.85    18.52  2023.0   5.0  2023\n...          ...      ...     ...   ...   ...\n1026025    84.97     0.00     0.0  20.0  2018\n1026027    59.99     0.00  2009.0   4.0  2018\n1026028    59.99     0.00  2009.0   3.0  2018\n1026030    54.47    25.27  2001.0   1.0  2018\n1026031    94.31     0.00  1977.0   7.0  2018\n\n[769937 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>건물면적(㎡)</th>\n      <th>토지면적(㎡)</th>\n      <th>건축년도</th>\n      <th>층</th>\n      <th>접수연도</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>43.04</td>\n      <td>37.00</td>\n      <td>2005.0</td>\n      <td>2.0</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13.38</td>\n      <td>10.61</td>\n      <td>2012.0</td>\n      <td>5.0</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>29.18</td>\n      <td>20.13</td>\n      <td>2023.0</td>\n      <td>5.0</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>29.29</td>\n      <td>20.20</td>\n      <td>2023.0</td>\n      <td>2.0</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>26.85</td>\n      <td>18.52</td>\n      <td>2023.0</td>\n      <td>5.0</td>\n      <td>2023</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1026025</th>\n      <td>84.97</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>20.0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1026027</th>\n      <td>59.99</td>\n      <td>0.00</td>\n      <td>2009.0</td>\n      <td>4.0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1026028</th>\n      <td>59.99</td>\n      <td>0.00</td>\n      <td>2009.0</td>\n      <td>3.0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1026030</th>\n      <td>54.47</td>\n      <td>25.27</td>\n      <td>2001.0</td>\n      <td>1.0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1026031</th>\n      <td>94.31</td>\n      <td>0.00</td>\n      <td>1977.0</td>\n      <td>7.0</td>\n      <td>2018</td>\n    </tr>\n  </tbody>\n</table>\n<p>769937 rows × 5 columns</p>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"cols = ['물건금액(만원)']\nY = data[cols]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:18:54.109866Z","iopub.execute_input":"2024-11-07T02:18:54.110380Z","iopub.status.idle":"2024-11-07T02:18:54.120122Z","shell.execute_reply.started":"2024-11-07T02:18:54.110333Z","shell.execute_reply":"2024-11-07T02:18:54.118727Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"Y","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:19:11.597431Z","iopub.execute_input":"2024-11-07T02:19:11.597896Z","iopub.status.idle":"2024-11-07T02:19:11.610861Z","shell.execute_reply.started":"2024-11-07T02:19:11.597850Z","shell.execute_reply":"2024-11-07T02:19:11.609625Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"         물건금액(만원)\n0           33500\n1           90000\n2          190000\n3           11000\n4           27250\n...           ...\n1026027     46500\n1026028     46500\n1026029     48000\n1026030     18000\n1026031     71000\n\n[1026032 rows x 1 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>물건금액(만원)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>33500</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>90000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>190000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>11000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>27250</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1026027</th>\n      <td>46500</td>\n    </tr>\n    <tr>\n      <th>1026028</th>\n      <td>46500</td>\n    </tr>\n    <tr>\n      <th>1026029</th>\n      <td>48000</td>\n    </tr>\n    <tr>\n      <th>1026030</th>\n      <td>18000</td>\n    </tr>\n    <tr>\n      <th>1026031</th>\n      <td>71000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1026032 rows × 1 columns</p>\n</div>"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"# 특수 문자 제거 (예: \" 기호 등)\nfor col in cols1:\n    data[col] = data[col].replace({'\"': ''}, regex=True)\n\n# 숫자로 변환 시도 (문자열이 포함된 행을 NaN으로 처리)\nfor col in cols1:\n    data[col] = pd.to_numeric(data[col], errors='coerce')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:59:41.648496Z","iopub.execute_input":"2024-11-07T02:59:41.649501Z","iopub.status.idle":"2024-11-07T02:59:44.785256Z","shell.execute_reply.started":"2024-11-07T02:59:41.649452Z","shell.execute_reply":"2024-11-07T02:59:44.783915Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"# NaN 값 제거\ndata = data.dropna(subset=cols1 + cols2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T02:59:51.798041Z","iopub.execute_input":"2024-11-07T02:59:51.798494Z","iopub.status.idle":"2024-11-07T02:59:52.062459Z","shell.execute_reply.started":"2024-11-07T02:59:51.798447Z","shell.execute_reply":"2024-11-07T02:59:52.060850Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"# 필요한 라이브러리 임포트\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\n# 1. 데이터 불러오기\n\n# 예: 집값 데이터셋 파일을 CSV로 불러오기\n# data = pd.read_csv('house_prices.csv')\n\n# 예제 데이터 생성\ndata = pd.read_csv('/kaggle/input/seoul-department-data/.csv', encoding='cp949', low_memory=False)\nprint(len(data))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T03:24:23.275222Z","iopub.execute_input":"2024-11-07T03:24:23.275690Z","iopub.status.idle":"2024-11-07T03:24:30.979355Z","shell.execute_reply.started":"2024-11-07T03:24:23.275636Z","shell.execute_reply":"2024-11-07T03:24:30.977873Z"}},"outputs":[{"name":"stdout","text":"1026032\n","output_type":"stream"}],"execution_count":49},{"cell_type":"code","source":"# 2. 특성과 타깃 변수 분리\ncols1 = ['건물면적(㎡)', '토지면적(㎡)', '건축년도','층','접수연도']\nX = data[cols1]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T03:24:31.988519Z","iopub.execute_input":"2024-11-07T03:24:31.989417Z","iopub.status.idle":"2024-11-07T03:24:32.013004Z","shell.execute_reply.started":"2024-11-07T03:24:31.989365Z","shell.execute_reply":"2024-11-07T03:24:32.011555Z"}},"outputs":[],"execution_count":50},{"cell_type":"code","source":"# NaN 값을 가진 행의 인덱스 식별\nnan_indices = X[X.isna().any(axis=1)].index\n\n# X에서 NaN 값을 가진 행 제거\nX_cleaned = X.dropna()\n\n# y에서 동일한 인덱스의 행 제거\ny_cleaned = y.drop(nan_indices)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T03:24:38.108319Z","iopub.execute_input":"2024-11-07T03:24:38.109547Z","iopub.status.idle":"2024-11-07T03:24:38.419069Z","shell.execute_reply.started":"2024-11-07T03:24:38.109494Z","shell.execute_reply":"2024-11-07T03:24:38.417983Z"}},"outputs":[],"execution_count":51},{"cell_type":"code","source":"print(len(X_cleaned))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T03:24:46.563833Z","iopub.execute_input":"2024-11-07T03:24:46.564270Z","iopub.status.idle":"2024-11-07T03:24:46.570786Z","shell.execute_reply.started":"2024-11-07T03:24:46.564230Z","shell.execute_reply":"2024-11-07T03:24:46.569440Z"}},"outputs":[{"name":"stdout","text":"769937\n","output_type":"stream"}],"execution_count":52},{"cell_type":"code","source":"X_cleaned['접수연도'] ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T03:26:35.951732Z","iopub.execute_input":"2024-11-07T03:26:35.952229Z","iopub.status.idle":"2024-11-07T03:26:35.962335Z","shell.execute_reply.started":"2024-11-07T03:26:35.952182Z","shell.execute_reply":"2024-11-07T03:26:35.961024Z"}},"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"0          2023.0\n3          2023.0\n4          2023.0\n5          2023.0\n6          2023.0\n            ...  \n1026025    2018.0\n1026027    2018.0\n1026028    2018.0\n1026030    2018.0\n1026031    2018.0\nName: 접수연도, Length: 769937, dtype: float64"},"metadata":{}}],"execution_count":55},{"cell_type":"code","source":"y_cleaned","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T03:26:43.377130Z","iopub.execute_input":"2024-11-07T03:26:43.377986Z","iopub.status.idle":"2024-11-07T03:26:43.387804Z","shell.execute_reply.started":"2024-11-07T03:26:43.377930Z","shell.execute_reply":"2024-11-07T03:26:43.385934Z"}},"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"0          33500\n3          11000\n4          27250\n5          27050\n6          25650\n           ...  \n1026025    56730\n1026027    46500\n1026028    46500\n1026030    18000\n1026031    71000\nName: 물건금액(만원), Length: 769937, dtype: int64"},"metadata":{}}],"execution_count":56},{"cell_type":"code","source":"X_cleaned['접수연도'] = X_cleaned['접수연도'].fillna(2000).astype(int)\nX_cleaned['접수연도'] = pd.to_numeric(X_cleaned['접수연도'], errors='coerce')\nX_cleaned['접수연도'] = X_cleaned['접수연도'].astype(int)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T03:26:50.509792Z","iopub.execute_input":"2024-11-07T03:26:50.510260Z","iopub.status.idle":"2024-11-07T03:26:50.530352Z","shell.execute_reply.started":"2024-11-07T03:26:50.510221Z","shell.execute_reply":"2024-11-07T03:26:50.529178Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_30/3650092309.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_cleaned['접수연도'] = X_cleaned['접수연도'].fillna(2000).astype(int)\n/tmp/ipykernel_30/3650092309.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_cleaned['접수연도'] = pd.to_numeric(X_cleaned['접수연도'], errors='coerce')\n/tmp/ipykernel_30/3650092309.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_cleaned['접수연도'] = X_cleaned['접수연도'].astype(int)\n","output_type":"stream"}],"execution_count":57},{"cell_type":"code","source":"# 3. 학습/테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X_cleaned, y_cleaned, test_size=0.2, random_state=42)\n\n# 4. 모델 선택 및 학습 (선형 회귀)\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# 5. 예측\ny_pred = model.predict(X_test)\n\n# 6. 모델 성능 평가\nmse = mean_squared_error(y_test, y_pred)\nrmse = np.sqrt(mse)\n\nprint(\"예측된 집값:\", y_pred)\nprint(\"RMSE (Root Mean Squared Error):\", rmse)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T03:26:53.165829Z","iopub.execute_input":"2024-11-07T03:26:53.166331Z","iopub.status.idle":"2024-11-07T03:26:53.478882Z","shell.execute_reply.started":"2024-11-07T03:26:53.166286Z","shell.execute_reply":"2024-11-07T03:26:53.476908Z"}},"outputs":[{"name":"stdout","text":"예측된 집값: [60829.2490686  71616.20538891 -2506.50813134 ... 73511.42142184\n 25472.51461522 87050.17359262]\nRMSE (Root Mean Squared Error): 38099.22291389283\n","output_type":"stream"}],"execution_count":58},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}